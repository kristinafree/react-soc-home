{"version":3,"sources":["api/api.js","assets/images/user.png","assets/images/preloader.svg.gif","components/Users/users.module.css","logo.png","components/News.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","assets/images/music.png","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","components/News.jsx","components/Music/Music.jsx","components/Settings.jsx","hoc/withSuspense.js","redux/sidebar-reducer.js","redux/music.reducer.js","redux/redux-store.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/Login.module.css","components/common/Paginator/Paginator.module.css","hoc/withAuthRedirect.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","log","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","s","form","validate","Boolean","window","location","hostname","match","Navbar","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","state","action","followed","count","filter","id","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNamber","setPortionNamber","leftPortionPageNamber","rightPortionPageNamber","paginator","onClick","p","selectedPage","pageNamber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","withAuthRedirect","connect","bind","page","totalCount","Header","header","logo","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","formSummaryError","message","messages","length","stopSubmit","_error","initialized","appReducer","News","img","Music","Setting","withSuspense","Suspense","fallback","sidebarReducer","playlist","musicReducer","m","musicId","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","formReducer","app","music","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandleErrors","reason","promise","initializeApp","addEventListener","removeEventListener","exact","path","render","Settings","AppContainer","withRouter","Promise","all","BaseJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength","mapStateToPropsForRedirect","RedirectComponent","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.bd15af0a.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"01a639bb-cdd2-4d22-865b-ec8ce6fa14ce\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1,pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then (response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`unfollow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.log('Obsolete method. Please profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email,password,rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}\r\n\r\nexport const musicAPI = {\r\n    getPlaylist(musicId) {\r\n        return instance.get(`music/` + musicId)\r\n            .then (response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    play(musicId) {\r\n        return instance.post(`play/${musicId}`)\r\n    },\r\n    stop(musicId) {\r\n        return instance.delete(`stop/${musicId}`)\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.7e719be7.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.svg.46280a98.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2FO1C\"};","module.exports = __webpack_public_path__ + \"static/media/logo.09cfe56c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"News_img__C22yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Ko8EW\",\"item\":\"Navbar_item__1w8Jo\",\"activeLink\":\"Navbar_activeLink__qOR4G\"};","import React from 'react';\r\nimport styles from \"./../FormsControls/FormsControls.module.css\"\r\nimport { Field } from 'redux-form';\r\nimport s from '../../Login/Login.module.css';\r\n\r\nexport const FormControl = ({input, meta:{touched,error},children}) => {\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className = {styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field className = {s.form}\r\n               placeholder = {placeholder} name = {name} \r\n               validate = {validators} \r\n               component = {component}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/music.b80dd36d.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// let s = {\r\n//     'nav': 'Navbar_nav__3ou9Q',\r\n//     'item': 'Navbar_item__3qaF3'\r\n//     'active': 'Baksndakdn_actv'\r\n// }\r\n\r\n// let c1 = 'item';\r\n// let c2 = 'active';\r\n// 'item active'\r\n// let classes = c1 + \"\" + c2;\r\n// let classesNew = `${s.item} ${c2}`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = {s.nav}> \r\n          <div className = {s.item}>\r\n            <NavLink to = \"/profile\" activeClassName = {s.activeLink}>Profile</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.active}`}>\r\n            <NavLink to = \"/dialogs\" activeClassName = {s.activeLink}>Messages</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.active}`}>\r\n            <NavLink to = \"/users\" activeClassName = {s.activeLink}>Users</NavLink>\r\n          </div>\r\n          <div className = {s.item}>\r\n            <NavLink to = \"/news\" activeClassName = {s.activeLink}>News</NavLink>\r\n          </div>\r\n          <div className = {s.item}>\r\n            <NavLink to = \"/music\" activeClassName = {s.activeLink}>Music</NavLink>\r\n          </div>\r\n          <div className = {s.item}>\r\n            <NavLink to = \"/setting\" activeClassName = {s.activeLink}>Settings</NavLink>\r\n          </div>\r\n      </nav>\r\n)}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState,action) => {\r\n    \r\n    switch(action.type) {\r\n        case FOLLOW:\r\n           return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { \r\n                ...state, \r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)  \r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId}) \r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }  \r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }  \r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n//import cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount,pageSize,onPageChanged,currentPage, portionSize = 10}) => {\r\n    \r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNamber, setPortionNamber] = useState(1);\r\n    let leftPortionPageNamber = (portionNamber - 1) * portionSize + 1;\r\n    let rightPortionPageNamber = portionNamber * portionSize;\r\n\r\n    return <div className = {styles.paginator}>\r\n        {/* {cn (styles.paginator, {\r\n        [styles.selectedPage] : true })}> */}\r\n        {portionNamber > 1 && \r\n        <button onClick = { () => {setPortionNamber (portionNamber -1) }}>PREV</button> }\r\n           \r\n            { pages\r\n                .filter(p => p >= leftPortionPageNamber && p <= rightPortionPageNamber)\r\n                .map ((p) => {\r\n                return <span className = { ({ \r\n                    [styles.selectedPage] : currentPage === p \r\n                }, styles.pageNamber)  }\r\n                             key = {p}\r\n                             onClick = { (e) => {\r\n                                  onPageChanged(p); \r\n                             }}>{p}</span>\r\n            })}\r\n\r\n            { portionCount > portionNamber &&\r\n                <button onClick = { () => {setPortionNamber(portionNamber + 1) }}>NEXT</button>}\r\n        </div>\r\n}\r\n        \r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div> \r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src = {user.photos.small != null ? user.photos.small : userPhoto} \r\n                                className = {styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                                ? <button disabled = {followingInProgress.some(id => id === user.id)} \r\n                                        onClick = {() => { unfollow(user.id) }}>\r\n                                    Unfollow</button>\r\n                                : <button disabled = {followingInProgress.some(id => id === user.id)} \r\n                                        onClick = {() => { follow(user.id) }}>\r\n                                    Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div> \r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return <div> \r\n        <Paginator currentPage = {currentPage} onPageChanged = {onPageChanged} \r\n                   totalItemsCount = {totalUsersCount} pageSize = {pageSize} />\r\n        <div>\r\n        {\r\n            users.map ( u => <User user = {u}\r\n                                   followingInProgress = {props.followingInProgress}\r\n                                   key = {u.id}\r\n                                   unfollow = {props.unfollow}\r\n                                   follow = {props.follow}\r\n                    />\r\n            )\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSelector, \r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n      \r\n      \r\n   \r\n","import React from 'react';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport Users from '../Users/Users';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'; \r\nimport { compose } from 'redux';\r\nimport { getUsers,getFollowingInProgress, getIsFetching, getCurrentPage, getTotalUsersCount, getPageSize} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props;\r\n        this.props.getUsers(currentPage,pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNamber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNamber,pageSize);\r\n    }\r\n\r\n    render () {\r\n        return <>\r\n              {this.props.isFetching ? <Preloader /> : null}\r\n              <Users totalUsersCount = {this.props.totalUsersCount}\r\n                      pageSize = {this.props.pageSize}\r\n                      currentPage = {this.props.currentPage}\r\n                      onPageChanged = {this.onPageChanged}\r\n                      users = {this.props.users}\r\n                      follow = {this.props.follow}\r\n                      unfollow = {this.props.unfollow} \r\n                      followingInProgress = {this.props.followingInProgress}\r\n                /> \r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet withRedirect = withAuthRedirect(UsersContainer);\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n    connect (mapStateToProps, {follow,unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);\r\n","import React from 'react';\r\nimport s from \"./Header.module.css\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../logo.png';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className = {s.header}>\r\n      <img src = {logo} />\r\n\r\n      <div className = {s.loginBlock}>\r\n          {props.isAuth \r\n          ? <div>{props.login} - <button onClick = {props.logout}>Log out</button></div>\r\n            : <NavLink to = {'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n)}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'kris-dev/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'kris-dev/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null //if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState,action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: \r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return { \r\n                ...state, \r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: \r\n         {userId, email, login, isAuth} \r\n}); \r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl} \r\n}); \r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n          \r\n    if (response.data.resultCode === 0) {\r\n    let {id, login, email} = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n    }      \r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    \r\n    let response = await authAPI.login(email,password,rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n        \r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    \r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n      return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer); ","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from './../common/FormsControls/FormsControls.module.css';\r\nimport s from '../Login/Login.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit = {handleSubmit} className = \"s.form\">\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src ={captchaUrl}/>}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n    \r\n            {error && <div className = {style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div className = {s.log}>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to = {\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm  onSubmit = {onSubmit} captchaUrl = {props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n    \r\nexport default connect(mapStateToProps, {login}) (Login);\r\n","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState,action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n            return { \r\n                ...state, \r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS}); \r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all ([promise])\r\n    .then(() => {\r\n        dispatch(getAuthUserData());\r\n    })\r\n    dispatch(initializedSuccess());\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) => {\r\n  return (\r\n    <div className = {s.img}>\r\n      {<img src = 'https://habrastorage.org/webt/v4/na/xg/v4naxgyec9pamduy0s1qf7gjqyc.png' />}\r\n    </div>\r\n  )\r\n}\r\nexport default News;\r\n","import React from 'react';\r\nimport styles from '../Music/music.module.css';\r\nimport musicPhoto from '../../assets/images/music.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\n\r\n\r\nconst Music = (props) => {\r\n    return ( \r\n      <div>\r\n          <h1>ACTION MUSIC</h1>\r\n            <NavLink to = {'/profile'}>\r\n              <img src = 'https://i2.wp.com/expert.com.ua/wp-content/uploads/2018/11/YouTube-Music.jpg' />\r\n            </NavLink>\r\n      </div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\n\r\nconst Setting = (props) => {\r\n  return (\r\n      <header>\r\n        <img src = 'https://habrastorage.org/webt/v4/na/xg/v4naxgyec9pamduy0s1qf7gjqyc.png' />\r\n        <div>\r\n        </div>\r\n      </header>)\r\n}\r\n\r\nexport default Setting;","import React, { Component } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback = {<Preloader />}>\r\n        <Component {...props} />       \r\n    </React.Suspense>\r\n    };\r\n}","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState,action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { musicAPI } from \"../api/api\";\r\n\r\n\r\nconst PLAY = 'PLAY';\r\nconst STOP = 'STOP';\r\n\r\nlet initialState = {\r\n    playlist: [],\r\n};\r\n\r\nconst musicReducer = (state = initialState,action) => {\r\n    \r\n    switch(action.type) {\r\n        case PLAY:\r\n           return {\r\n                ...state,\r\n                playlist: state.playlist.map(m => {\r\n                    if (m.id === action.musicId) {\r\n                        return {...m, followed: true}\r\n                    }\r\n                    return m;\r\n                })\r\n            }\r\n        case STOP:\r\n            return {\r\n                ...state,\r\n                playlist: state.playlist.map(m => {\r\n                    if (m.id === action.musicId) {\r\n                        return {...m, followed: false}\r\n                    }\r\n                    return m;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const play = (musicId) => ({type: PLAY, musicId}) \r\nexport const stop = (musicId) => ({ type: STOP, musicId})\r\n\r\nexport default musicReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\nimport musicReducer from \"./music.reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    music: musicReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter,Route, withRouter, Switch, Redirect} from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {initializeApp} from './redux/app-reducer.js'\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport News from './components/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings';\r\nimport {withSuspense} from './hoc/withSuspense';\r\nimport store from './redux/redux-store'\r\n\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n       catchAllUnhandleErrors = (reason, promise) => {\r\n              // alert(\"Error\")\r\n       }\r\n       componentDidMount() {\r\n              this.props.initializeApp();\r\n              window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n       }\r\n\r\n       componentWillMount() {\r\n              window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n       }\r\n\r\n       render() {\r\n              if (!this.props.initialized) {\r\n                 return <Preloader />\r\n              }\r\n              \r\n              return (\r\n                     <div className = 'app-wrapper'>\r\n                            <HeaderContainer />\r\n                            <Navbar />\r\n                            <div className = 'app-wrapper-content'>\r\n                                   <Switch>\r\n                                     <Route exact path = '/' \r\n                                                 render = { () => <Redirect to = {\"/profile\"} /> }/>\r\n                                     <Route path ='/dialogs' \r\n                                                 render = {withSuspense(DialogsContainer)} />\r\n                                      <Route path = '/profile/:userId?' \r\n                                                 render = {withSuspense(ProfileContainer)} />\r\n                                      <Route path = '/users' \r\n                                                 render = { () => <UsersContainer /> }/>\r\n                                      <Route path = '/login' \r\n                                                 render = { () => <LoginPage /> }/>\r\n                                      <Route path = '/news' \r\n                                                 render = { () => <News /> }/>\r\n                                      <Route path = '/music' \r\n                                                 render = { () => <Music /> }/>\r\n                                      <Route path = '/setting' \r\n                                                 render = { () => <Settings /> }/>\r\n                                      <Route path = '*' \r\n                                                 render = { () => <div>404 NOT FOUND</div> }/>\r\n                                   </Switch>\r\n                            </div>\r\n                     </div>\r\n              )\r\n       }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n       initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n       withRouter, \r\n       connect(mapStateToProps, {initializeApp})) (App);\r\n\r\nconst BaseJSApp = (props) => {\r\n       return <HashRouter>\r\n           <Provider store = {store}>\r\n              <AppContainer />\r\n           </Provider>\r\n       </HashRouter>\r\n}\r\n\r\nexport default BaseJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BaseJSApp from './App';\r\n\r\nReactDOM.render(<BaseJSApp />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src = {preloader} />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1H-BZ\",\"error\":\"FormsControls_error__2iTUg\",\"formSummaryError\":\"FormsControls_formSummaryError__2NpLn\"};","import React from 'react';\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"Login_log__q8FAf\",\"form\":\"Login_form__37HUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1ryVS\",\"pageNamber\":\"Paginator_pageNamber__3Sqbk\",\"selectedPage\":\"Paginator_selectedPage__kdBcR\"};","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = '/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2POHf\",\"loginBlock\":\"Header_loginBlock__1gpVr\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SACCESS ='SAVE_PHOTO_SACCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'This, super post!', likesCount: 12},\r\n        {id: 2, message: 'Liza super cat!', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState,action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SACCESS: {\r\n            return {...state, profile: {...state.profile,photos: action.photos} }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText}) \r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile}) \r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId}) \r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SACCESS, photos}) \r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data) );\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data) );\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status)\r\n                    \r\n        if (response.data.resultCode ===0 ) {\r\n                    dispatch(setStatus(status) );\r\n        }\r\n    }catch(error) {\r\n        //error\r\n    }\r\n} \r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n            \r\n    if (response.data.resultCode ===0 ) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos) );\r\n    }\r\n} \r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n            \r\n    if (response.data.resultCode ===0 ) {\r\n             dispatch(getUserProfile(userId));\r\n    }else{\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        //dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {\"facebook\": response.data.messages[0]} }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n} \r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs:[\r\n        {id: 1, name: 'Liza'},\r\n        {id: 2, name: 'Yanina'},\r\n        {id: 3, name: 'Tanya'},\r\n        {id: 4, name: 'Sergey'},\r\n        {id: 5, name: 'Kris'},\r\n        {id: 6, name: 'Yura'},\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"Your name\"},\r\n        {id: 3, message: \"Love\"},\r\n        {id: 4, message: \"Love\"},\r\n        {id: 5, message: \"Love\"},\r\n        {id: 6, message: \"Love\"},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body} ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: 'SEND_MESSAGE', newMessageBody}) \r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}