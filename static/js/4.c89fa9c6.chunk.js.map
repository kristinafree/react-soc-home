{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","React","createRef","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcnKC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAaC,IAAEC,OAAS,IAAMD,IAAEE,QAChC,kBAAC,IAAD,CAASC,GAAMN,GAAOD,EAAMQ,QCD1BC,EANC,SAACT,GACb,OACA,yBAAKG,UAAaC,IAAEC,QAASL,EAAMU,U,iCCAjCC,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,wBAAjBD,EAbQ,SAACb,GACpB,OACI,0BAAMe,SAAYf,EAAMgB,cAChB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IACpBC,SAAY,CAACC,IAAUV,GACvBH,KAAO,iBAAiBc,YAAc,wBAE1C,6BAAK,6CC0CNC,EA/CC,SAACvB,GAEjB,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAQqB,EAAErB,KAAMsB,IAAOD,EAAE3B,GAAIA,GAAM2B,EAAE3B,QAC3F6B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAAWuB,EAAEvB,QAASoB,IAAOG,EAAE/B,QAClEsB,EAAMU,eAEJC,IAAMC,YAQ7B,OACI,yBAAKjC,UAAaC,IAAEuB,SAChB,yBAAKxB,UAAaC,IAAEiC,cACfX,GAgBL,yBAAKvB,UAAaC,IAAE4B,UAChB,6BAAMD,GAGN,6BACI,kBAAC,EAAD,CAAgBhB,SA9BZ,SAACuB,GACjBtC,EAAMuC,YAAYD,EAAOJ,uB,wBCDdM,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACiB,GACtB,MAAO,CACLH,YAAa,SAACL,GACVQ,EAASC,YAAmBT,SAKvBM,CAGbjB","file":"static/js/4.c89fa9c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2bFMt\",\"dialogsItems\":\"Dialogs_dialogsItems__1R-z2\",\"active\":\"Dialogs_active__3qj89\",\"messages\":\"Dialogs_messages__70mcd\",\"message\":\"Dialogs_message__1QOtS\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    \r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className = {s.dialog + ' ' + s.active}>\r\n             <NavLink to = {path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className = {s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n   ","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit = {props.handleSubmit}>\r\n                <div>\r\n                    <Field component = {Textarea}\r\n                    validate = {[required, maxLength50]}\r\n                    name = \"newMessageBody\" placeholder = \"Enter your message\" />\r\n                </div>\r\n                <div><button>Send</button></div>\r\n                </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\nlet state = props.dialogsPage;\r\n\r\nlet dialogsElements = state.dialogs.map( d => <DialogItem name = {d.name} key = {d.id} id = {d.id} /> )\r\nlet messagesElements = state.messages.map(m => <Message message = {m.message} key = {m.id} />)\r\nlet newMessageBody = state.newMessageBody;\r\n\r\nlet newDialogElement = React.createRef();\r\n\r\nlet addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n }\r\n\r\n//if (!props.isAuth) return <Redirect to = {\"/login\"} />\r\n;\r\nreturn (\r\n    <div className = {s.dialogs}>\r\n        <div className = {s.dialogsItems}>\r\n            {dialogsElements}\r\n            {/* <DialogItem name = {dialogsData[0].name} id = {dialogsData[0].id} />\r\n            <DialogItem name = {dialogsData[1].name} id = {dialogsData[1].id} /> */}\r\n            {/* <div className = {s.dialog}>\r\n                <NavLink to = \"/dialogs/2\">Yanina</NavLink>\r\n            </div>\r\n            <div className = {s.dialog}>\r\n                <NavLink to = \"/dialogs/3\">Kris</NavLink>\r\n            </div>\r\n            <div className = {s.dialog}>\r\n                <NavLink to = \"/dialogs/4\">Tanya</NavLink>\r\n            </div>\r\n            <div className = {s.dialog}>\r\n                <NavLink to = \"/dialogs/5\">Sergey</NavLink>\r\n            </div> создали компонент сократив код,строки выше*/}\r\n        </div>\r\n        <div className = {s.messages}>\r\n            <div>{messagesElements}</div>\r\n            {/* <Message message = {messagesData[0].message} />\r\n            <Message message = {messagesData[1].message} /> */}\r\n            <div>\r\n                <AddMessageForm onSubmit = {addNewMessage} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      sendMessage: (newMessageBody) => {\r\n          dispatch(sendMessageCreator(newMessageBody));\r\n      }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    // withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}